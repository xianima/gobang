  gobangclass.cpp
D:\VisualStudio\2019\VC\Tools\MSVC\14.28.29910\include\utility(249,16): warning C4244: “初始化”: 从“_Ty”转换到“_Ty1”，可能丢失数据
          with
          [
              _Ty=double
          ]
          and
          [
              _Ty1=const int
          ]
D:\VisualStudio\2019\VC\Tools\MSVC\14.28.29910\include\xmemory(695): message : 查看对正在编译的函数 模板 实例化“std::pair<const int,std::pair<int,int>>::pair<double,std::pair<int,int>,0>(std::pair<double,std::pair<int,int>> &&) noexcept”的引用
D:\VisualStudio\2019\VC\Tools\MSVC\14.28.29910\include\xmemory(696): message : 查看对正在编译的函数 模板 实例化“std::pair<const int,std::pair<int,int>>::pair<double,std::pair<int,int>,0>(std::pair<double,std::pair<int,int>> &&) noexcept”的引用
D:\VisualStudio\2019\VC\Tools\MSVC\14.28.29910\include\xtree(805): message : 查看对正在编译的函数 模板 实例化“void std::_Default_allocator_traits<_Alloc>::construct<_Ty,std::pair<double,std::pair<int,int>>>(_Alloc &,_Objty *const ,std::pair<double,std::pair<int,int>> &&)”的引用
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const int,std::pair<int,int>>,std::_Default_allocator_traits<std::allocator<std::pair<const int,std::pair<int,int>>>>::void_pointer>>,
              _Ty=std::pair<const int,std::pair<int,int>>,
              _Objty=std::pair<const int,std::pair<int,int>>
          ]
D:\VisualStudio\2019\VC\Tools\MSVC\14.28.29910\include\xtree(806): message : 查看对正在编译的函数 模板 实例化“void std::_Default_allocator_traits<_Alloc>::construct<_Ty,std::pair<double,std::pair<int,int>>>(_Alloc &,_Objty *const ,std::pair<double,std::pair<int,int>> &&)”的引用
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const int,std::pair<int,int>>,std::_Default_allocator_traits<std::allocator<std::pair<const int,std::pair<int,int>>>>::void_pointer>>,
              _Ty=std::pair<const int,std::pair<int,int>>,
              _Objty=std::pair<const int,std::pair<int,int>>
          ]
D:\VisualStudio\2019\VC\Tools\MSVC\14.28.29910\include\xtree(1002): message : 查看对正在编译的函数 模板 实例化“std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<const int,std::pair<int,int>>,std::_Default_allocator_traits<_Alloc>::void_pointer>>>::_Tree_temp_node<_Ty>(_Alnode &,std::_Tree_node<std::pair<const int,std::pair<int,int>>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,_Ty &&)”的引用
          with
          [
              _Alloc=std::allocator<std::pair<const int,std::pair<int,int>>>,
              _Ty=std::pair<double,std::pair<int,int>>,
              _Alnode=std::allocator<std::_Tree_node<std::pair<const int,std::pair<int,int>>,std::_Default_allocator_traits<std::allocator<std::pair<const int,std::pair<int,int>>>>::void_pointer>>
          ]
D:\VisualStudio\2019\VC\Tools\MSVC\14.28.29910\include\xtree(1018): message : 查看对正在编译的函数 模板 实例化“std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<const int,std::pair<int,int>>,std::_Default_allocator_traits<_Alloc>::void_pointer>>>::_Tree_temp_node<_Ty>(_Alnode &,std::_Tree_node<std::pair<const int,std::pair<int,int>>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,_Ty &&)”的引用
          with
          [
              _Alloc=std::allocator<std::pair<const int,std::pair<int,int>>>,
              _Ty=std::pair<double,std::pair<int,int>>,
              _Alnode=std::allocator<std::_Tree_node<std::pair<const int,std::pair<int,int>>,std::_Default_allocator_traits<std::allocator<std::pair<const int,std::pair<int,int>>>>::void_pointer>>
          ]
D:\VisualStudio\2019\VC\Tools\MSVC\14.28.29910\include\xtree(1094): message : 查看对正在编译的函数 模板 实例化“std::pair<std::_Tree_node<std::pair<const int,std::pair<int,int>>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,true>>::_Emplace<std::pair<double,std::pair<int,int>>>(std::pair<double,std::pair<int,int>> &&)”的引用
          with
          [
              _Alloc=std::allocator<std::pair<const int,std::pair<int,int>>>,
              _Kty=int,
              _Ty=std::pair<int,int>,
              _Pr=std::less<int>
          ]
D:\VisualStudio\2019\VC\Tools\MSVC\14.28.29910\include\xtree(1095): message : 查看对正在编译的函数 模板 实例化“std::pair<std::_Tree_node<std::pair<const int,std::pair<int,int>>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,true>>::_Emplace<std::pair<double,std::pair<int,int>>>(std::pair<double,std::pair<int,int>> &&)”的引用
          with
          [
              _Alloc=std::allocator<std::pair<const int,std::pair<int,int>>>,
              _Kty=int,
              _Ty=std::pair<int,int>,
              _Pr=std::less<int>
          ]
D:\VisualStudio\2019\VC\Tools\MSVC\14.28.29910\include\map(489): message : 查看对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int,std::pair<int,int>>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,true>>::emplace<std::pair<double,std::pair<int,int>>>(std::pair<double,std::pair<int,int>> &&)”的引用
          with
          [
              _Kty=int,
              _Ty=std::pair<int,int>,
              _Pr=std::less<int>,
              _Alloc=std::allocator<std::pair<const int,std::pair<int,int>>>
          ]
D:\VisualStudio\2019\VC\Tools\MSVC\14.28.29910\include\map(490): message : 查看对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int,std::pair<int,int>>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,true>>::emplace<std::pair<double,std::pair<int,int>>>(std::pair<double,std::pair<int,int>> &&)”的引用
          with
          [
              _Kty=int,
              _Ty=std::pair<int,int>,
              _Pr=std::less<int>,
              _Alloc=std::allocator<std::pair<const int,std::pair<int,int>>>
          ]
D:\VisualStudio\2019\VC\Tools\MSVC\14.28.29910\include\map(501): message : 查看对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int,std::pair<int,int>>>>> std::multimap<int,std::pair<int,int>,std::less<int>,std::allocator<std::pair<const int,std::pair<int,int>>>>::emplace<_Ty>(_Ty &&)”的引用
          with
          [
              _Ty=std::pair<double,std::pair<int,int>>
          ]
D:\VisualStudio\2019\VC\Tools\MSVC\14.28.29910\include\map(501): message : 查看对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int,std::pair<int,int>>>>> std::multimap<int,std::pair<int,int>,std::less<int>,std::allocator<std::pair<const int,std::pair<int,int>>>>::emplace<_Ty>(_Ty &&)”的引用
          with
          [
              _Ty=std::pair<double,std::pair<int,int>>
          ]
C:\Users\22380\source\repos\gobang\gobang\gobangclass.cpp(529): message : 查看对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int,std::pair<int,int>>>>> std::multimap<int,std::pair<int,int>,std::less<int>,std::allocator<std::pair<const int,std::pair<int,int>>>>::insert<std::pair<double,std::pair<int,int>>,0>(_Valty &&)”的引用
          with
          [
              _Valty=std::pair<double,std::pair<int,int>>
          ]
C:\Users\22380\source\repos\gobang\gobang\gobangclass.cpp(529): message : 查看对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int,std::pair<int,int>>>>> std::multimap<int,std::pair<int,int>,std::less<int>,std::allocator<std::pair<const int,std::pair<int,int>>>>::insert<std::pair<double,std::pair<int,int>>,0>(_Valty &&)”的引用
          with
          [
              _Valty=std::pair<double,std::pair<int,int>>
          ]
  gobang.vcxproj -> C:\Users\22380\source\repos\gobang\Debug\gobang.exe
